---
test_dev_pulp_content_url: "{{ dev_pulp_url }}/pulp/content/"

###############################################################################
# Deb

# Common parameters for Deb package repositories.
test_pulp_repository_deb_repo_common:
  remote_username: "{{ test_dev_pulp_registry_username }}"
  remote_password: "{{ test_dev_pulp_registry_password }}"
  # Remove content that has been removed from the upstream mirror.
  mirror: true
  # Download content on demand from Ark.
  policy: on_demand
  state: present

# Dict mapping repository short names to versions.
# This variable may be set to the latest available versions in dev by running
# the test-pulp-repo-version-query.yml playbook.
# Alternatively, a set of specific versions may be specified via an extra
# variables file.
test_pulp_repository_deb_repo_versions: {}

test_pulp_repository_deb_repos: >-
  {%- set test_repos = [] -%}
  {%- for repo in deb_package_repos_filtered -%}
  {%- if repo.sync | default(true) and repo.publish | default(true) -%}
  {%- set version = test_pulp_repository_deb_repo_versions.get(repo.short_name, omit) -%}
  {%- set test_repo = {"name": repo.name ~ " (ark)", "url": test_dev_pulp_content_url ~ repo.base_path ~ version, "short_name": repo.short_name} -%}
  {%- if "distributions" in repo -%}
  {%- set test_repo = test_repo | combine({"distributions": repo.distributions}) -%}
  {%- endif -%}
  {%- if "components" in repo -%}
  {%- set test_repo = test_repo | combine({"components": repo.components}) -%}
  {%- endif -%}
  {%- if "architectures" in repo -%}
  {%- set test_repo = test_repo | combine({"architectures": repo.architectures}) -%}
  {%- endif -%}
  {%- set _ = test_repos.append(test_pulp_repository_deb_repo_common | combine(test_repo)) -%}
  {%- endif -%}
  {%- endfor -%}
  {{ test_repos }}

# Publication format is a subset of distribution.
test_pulp_publication_deb: "{{ test_pulp_distribution_deb }}"

# Common parameters for Deb package distributions.
test_pulp_distribution_deb_common:
  state: present

test_pulp_distribution_deb: >-
  {%- set test_dists = [] -%}
  {%- for repo in deb_package_repos_filtered -%}
  {%- if repo.sync | default(true) and repo.publish | default(true) -%}
  {%- set version = test_pulp_repository_deb_repo_versions.get(repo.short_name, omit) -%}
  {%- set name = repo.distribution_name ~ version ~ "-ark" -%}
  {%- set repo_name = repo.name ~ " (ark)" -%}
  {%- set base_path = repo.base_path ~ version -%}
  {%- set test_dist = {"name": name, "repository": repo_name, "base_path": base_path, "short_name": repo.short_name} -%}
  {%- if "mode" in repo -%}
  {%- set test_dist = test_dist | combine({"mode": repo.mode}) -%}
  {%- endif -%}
  {%- set _ = test_dists.append(test_pulp_distribution_deb_common | combine(test_dist)) -%}
  {%- endif -%}
  {%- endfor -%}
  {{ test_dists }}

###############################################################################
# RPM

# Common parameters for RPM package repositories.
test_pulp_repository_rpm_repo_common:
  remote_username: "{{ test_dev_pulp_registry_username }}"
  remote_password: "{{ test_dev_pulp_registry_password }}"
  # Download content on demand from Ark.
  policy: on_demand
  # Remove content that has been removed from the upstream mirror.
  sync_policy: mirror_complete
  state: present

# Dict mapping repository short names to versions.
# This variable may be set to the latest available versions in dev by running
# the test-pulp-repo-version-query.yml playbook.
# Alternatively, a set of specific versions may be specified via an extra
# variables file.
test_pulp_repository_rpm_repo_versions: {}

test_pulp_repository_rpm_repos: >-
  {%- set test_repos = [] -%}
  {%- for repo in rpm_package_repos_filtered -%}
  {%- if repo.sync | default(true) and repo.publish | default(true) -%}
  {%- set version = test_pulp_repository_rpm_repo_versions.get(repo.short_name, omit) -%}
  {%- set test_repo = {"name": repo.name ~ " (ark)", "url": test_dev_pulp_content_url ~ repo.base_path ~ version, "short_name": repo.short_name} -%}
  {%- set _ = test_repos.append(test_pulp_repository_rpm_repo_common | combine(test_repo)) -%}
  {%- endif -%}
  {%- endfor -%}
  {{ test_repos }}

# Publication format is a subset of distribution.
test_pulp_publication_rpm: "{{ test_pulp_distribution_rpm }}"

# Common parameters for RPM package distributions.
test_pulp_distribution_rpm_common:
  state: present

test_pulp_distribution_rpm: >-
  {%- set test_dists = [] -%}
  {%- for repo in rpm_package_repos_filtered -%}
  {%- if repo.sync | default(true) and repo.publish | default(true) -%}
  {%- set version = test_pulp_repository_rpm_repo_versions.get(repo.short_name, omit) -%}
  {%- set name = repo.distribution_name ~ version ~ "-ark" -%}
  {%- set repo_name = repo.name ~ " (ark)" -%}
  {%- set base_path = repo.base_path ~ version -%}
  {%- set test_dist = {"name": name, "repository": repo_name, "base_path": base_path, "short_name": repo.short_name} -%}
  {%- set _ = test_dists.append(test_pulp_distribution_rpm_common | combine(test_dist)) -%}
  {%- endif -%}
  {%- endfor -%}
  {{ test_dists }}
