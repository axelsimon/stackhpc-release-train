---
- name: Check if working branch already exists on the remote
  ansible.builtin.shell:
    cmd: |
      gh api \
      -H "Accept: application/vnd.github.v3+json" \
      /repos/{{owner}}/{{repository_manifest.name}}/git/ref/heads/{{community_manifest.branch}}-community-files
- name: Delete working branch from the remote
  ansible.builtin.shell:
    cmd: |
      gh api \
      --method DELETE \
      -H "Accept: application/vnd.github.v3+json" \
      /repos/{{owner}}/{{repository_manifest.name}}/git/refs/heads/{{community_manifest.branch}}-community-files
- name: Create working branch
  ansible.builtin.shell:
    cmd:  |
      git checkout -b {{community_manifest.branch}}-community-files \
        origin/{{community_manifest.prefix | default("")}}{{community_manifest.branch}}
    chdir: '{{staging_path}}/{{repository_manifest.name}}'
- name: Create .github directory
  ansible.builtin.file:
    path: '{{staging_path}}/{{repository_manifest.name}}/.github/'
    state: directory
- name: Copy community files
  ansible.builtin.copy:
    src: 'files/codeowners/{{repository_manifest.name}}'
    dest: '{{staging_path}}/{{repository_manifest.name}}/.github/CODEOWNERS'
  register: community_copy
- name: Commit changes
  ansible.builtin.shell:
    cmd: "git add . && git commit -m 'feat: automatic update of community files'"
    chdir: '{{staging_path}}/{{repository_manifest.name}}'
  when: community_copy.changed
- name: Push branch to remote
  ansible.builtin.shell:
    cmd: 'git push -u origin {{community_manifest.branch}}-community-files'
    chdir: '{{staging_path}}/{{repository_manifest.name}}'
  when: community_copy.changed
- name: Open pull request
  ansible.builtin.shell:
    cmd: 'gh pr create --fill --base {{community_manifest.prefix | default("")}}{{community_manifest.branch}}'
    chdir: '{{staging_path}}/{{repository_manifest.name}}'
  when: community_copy.changed
- name: Pause playbook to prevent exceeding API rate limit
  ansible.builtin.pause:
    seconds: 10
  when: community_copy.changed
